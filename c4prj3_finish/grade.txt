Grading at Mon Aug 10 16:39:55 UTC 2020
Running 'make clean' to do a clean build of your project
rm -rf *.o poker *~
Running 'make poker OTHERFLAGS=-O3' to build your project
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o cards.o cards.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o deck.o deck.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o eval.o eval.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o future.o future.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o input.o input.c
gcc -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3   -c -o main.o main.c
gcc -o poker -Wall -Werror -ggdb3 -std=gnu99 -pedantic -O3 cards.o deck.o eval.o future.o input.o main.o
 - Starting with some Texas Hold'em hands
Running a simulation with 20000 draws for 2 hands...
Valgrind reported errors:
==1115== Memcheck, a memory error detector
==1115== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1115== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1115== Command: ./poker inp.txt 20000
==1115== Parent PID: 1114
==1115== 
==1115== Invalid write of size 8
==1115==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1115==    by 0x401566: build_remaining_deck (deck.c:156)
==1115==    by 0x400AF3: main (main.c:103)
==1115==  Address 0x5208040 is 0 bytes after a block of size 304 alloc'd
==1115==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1115==    by 0x401312: make_deck_exclude (deck.c:99)
==1115==    by 0x401566: build_remaining_deck (deck.c:156)
==1115==    by 0x400AF3: main (main.c:103)
==1115== 
==1115== Invalid write of size 8
==1115==    at 0x401407: make_deck_exclude (deck.c:110)
==1115==    by 0x401566: build_remaining_deck (deck.c:156)
==1115==    by 0x400AF3: main (main.c:103)
==1115==  Address 0x5208200 is 0 bytes after a block of size 304 alloc'd
==1115==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1115==    by 0x401333: make_deck_exclude (deck.c:102)
==1115==    by 0x401566: build_remaining_deck (deck.c:156)
==1115==    by 0x400AF3: main (main.c:103)
==1115== 
==1115== Invalid read of size 8
==1115==    at 0x4010EA: shuffle (deck.c:35)
==1115==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1115==    by 0x400B27: main (main.c:110)
==1115==  Address 0x52090a8 is 0 bytes after a block of size 8 alloc'd
==1115==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1115==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1115==    by 0x401566: build_remaining_deck (deck.c:156)
==1115==    by 0x400AF3: main (main.c:103)
==1115== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 368, hi = 86019856.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==1115==    at 0x38083F48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x38084064: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x380841F1: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x38091A9C: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x3807D673: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x3807BF03: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x380800DA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x3807B49A: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x38059401: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1115==    by 0x802D59BCD: ???
==1115==    by 0x802CA9F2F: ???
==1115==    by 0x80200838F: ???
==1115==    by 0x4010E4: shuffle (deck.c:34)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 1115)
==1115==    at 0x4010FF: shuffle (deck.c:36)
==1115==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1115==    by 0x400B27: main (main.c:110)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

Running a simulation with 25000 draws for 3 hands...
Valgrind reported errors:
==1120== Memcheck, a memory error detector
==1120== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1120== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1120== Command: ./poker inp.txt 25000
==1120== Parent PID: 1119
==1120== 
==1120== Invalid write of size 8
==1120==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120==  Address 0x5208c88 is 0 bytes after a block of size 248 alloc'd
==1120==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1120==    by 0x401312: make_deck_exclude (deck.c:99)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120== 
==1120== Invalid write of size 8
==1120==    at 0x401407: make_deck_exclude (deck.c:110)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120==  Address 0x5208e18 is 0 bytes after a block of size 248 alloc'd
==1120==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1120==    by 0x401333: make_deck_exclude (deck.c:102)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120== 
==1120== Invalid read of size 8
==1120==    at 0x4010EA: shuffle (deck.c:35)
==1120==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1120==    by 0x400B27: main (main.c:110)
==1120==  Address 0x5209ae8 is 0 bytes after a block of size 8 alloc'd
==1120==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1120==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120== 
==1120== Invalid read of size 8
==1120==    at 0x4010FF: shuffle (deck.c:36)
==1120==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1120==    by 0x400B27: main (main.c:110)
==1120==  Address 0x5209b68 is 24 bytes before a block of size 8 alloc'd
==1120==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1120==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120== 
==1120== Invalid write of size 8
==1120==    at 0x401102: shuffle (deck.c:36)
==1120==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1120==    by 0x400B27: main (main.c:110)
==1120==  Address 0x5209ae8 is 0 bytes after a block of size 8 alloc'd
==1120==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1120==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120== 
==1120== Invalid write of size 8
==1120==    at 0x40110B: shuffle (deck.c:37)
==1120==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1120==    by 0x400B27: main (main.c:110)
==1120==  Address 0x5209b68 is 24 bytes before a block of size 8 alloc'd
==1120==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1120==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1120==    by 0x401566: build_remaining_deck (deck.c:156)
==1120==    by 0x400AF3: main (main.c:103)
==1120== 
==1120== Invalid read of size 4
==1120==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1120==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1120==    by 0x400B27: main (main.c:110)
==1120==  Address 0x20000000e is not stack'd, malloc'd or (recently) free'd
==1120== 
==1120== 
==1120== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1120==  Access not within mapped region at address 0x20000000E
==1120==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1120==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1120==    by 0x400B27: main (main.c:110)
==1120==  If you believe this happened as a result of a stack
==1120==  overflow in your program's main thread (unlikely but
==1120==  possible), you can try to increase the size of the
==1120==  main thread stack using the --main-stacksize= flag.
==1120==  The main thread stack size used in this run was 8388608.
==1120== 
==1120== HEAP SUMMARY:
==1120==     in use at exit: 2,240 bytes in 86 blocks
==1120==   total heap usage: 164 allocs, 78 frees, 12,102 bytes allocated
==1120== 
==1120== LEAK SUMMARY:
==1120==    definitely lost: 776 bytes in 17 blocks
==1120==    indirectly lost: 248 bytes in 31 blocks
==1120==      possibly lost: 0 bytes in 0 blocks
==1120==    still reachable: 1,216 bytes in 38 blocks
==1120==         suppressed: 0 bytes in 0 blocks
==1120== Rerun with --leak-check=full to see details of leaked memory
==1120== 
==1120== For counts of detected and suppressed errors, rerun with: -v
==1120== ERROR SUMMARY: 79 errors from 7 contexts (suppressed: 0 from 0)
Running a simulation with 25000 draws for 3 hands...
Valgrind reported errors:
==1125== Memcheck, a memory error detector
==1125== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1125== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1125== Command: ./poker inp2.txt 25000
==1125== Parent PID: 1124
==1125== 
==1125== Invalid write of size 8
==1125==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125==  Address 0x5208c88 is 0 bytes after a block of size 248 alloc'd
==1125==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1125==    by 0x401312: make_deck_exclude (deck.c:99)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125== 
==1125== Invalid write of size 8
==1125==    at 0x401407: make_deck_exclude (deck.c:110)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125==  Address 0x5208e18 is 0 bytes after a block of size 248 alloc'd
==1125==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1125==    by 0x401333: make_deck_exclude (deck.c:102)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125== 
==1125== Invalid read of size 8
==1125==    at 0x4010EA: shuffle (deck.c:35)
==1125==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1125==    by 0x400B27: main (main.c:110)
==1125==  Address 0x5209ae8 is 0 bytes after a block of size 8 alloc'd
==1125==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1125==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125== 
==1125== Invalid read of size 8
==1125==    at 0x4010FF: shuffle (deck.c:36)
==1125==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1125==    by 0x400B27: main (main.c:110)
==1125==  Address 0x5209b68 is 24 bytes before a block of size 8 alloc'd
==1125==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1125==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125== 
==1125== Invalid write of size 8
==1125==    at 0x401102: shuffle (deck.c:36)
==1125==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1125==    by 0x400B27: main (main.c:110)
==1125==  Address 0x5209ae8 is 0 bytes after a block of size 8 alloc'd
==1125==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1125==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125== 
==1125== Invalid write of size 8
==1125==    at 0x40110B: shuffle (deck.c:37)
==1125==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1125==    by 0x400B27: main (main.c:110)
==1125==  Address 0x5209b68 is 24 bytes before a block of size 8 alloc'd
==1125==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1125==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1125==    by 0x401566: build_remaining_deck (deck.c:156)
==1125==    by 0x400AF3: main (main.c:103)
==1125== 
==1125== Invalid read of size 4
==1125==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1125==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1125==    by 0x400B27: main (main.c:110)
==1125==  Address 0x20000000e is not stack'd, malloc'd or (recently) free'd
==1125== 
==1125== 
==1125== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1125==  Access not within mapped region at address 0x20000000E
==1125==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1125==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1125==    by 0x400B27: main (main.c:110)
==1125==  If you believe this happened as a result of a stack
==1125==  overflow in your program's main thread (unlikely but
==1125==  possible), you can try to increase the size of the
==1125==  main thread stack using the --main-stacksize= flag.
==1125==  The main thread stack size used in this run was 8388608.
==1125== 
==1125== HEAP SUMMARY:
==1125==     in use at exit: 2,240 bytes in 86 blocks
==1125==   total heap usage: 164 allocs, 78 frees, 12,102 bytes allocated
==1125== 
==1125== LEAK SUMMARY:
==1125==    definitely lost: 776 bytes in 17 blocks
==1125==    indirectly lost: 248 bytes in 31 blocks
==1125==      possibly lost: 0 bytes in 0 blocks
==1125==    still reachable: 1,216 bytes in 38 blocks
==1125==         suppressed: 0 bytes in 0 blocks
==1125== Rerun with --leak-check=full to see details of leaked memory
==1125== 
==1125== For counts of detected and suppressed errors, rerun with: -v
==1125== ERROR SUMMARY: 79 errors from 7 contexts (suppressed: 0 from 0)
Running a simulation with 25000 draws for 2 hands...
Valgrind reported errors:
==1130== Memcheck, a memory error detector
==1130== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1130== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1130== Command: ./poker inp2.txt 25000
==1130== Parent PID: 1129
==1130== 
==1130== Invalid write of size 8
==1130==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1130==    by 0x401566: build_remaining_deck (deck.c:156)
==1130==    by 0x400AF3: main (main.c:103)
==1130==  Address 0x5208040 is 0 bytes after a block of size 304 alloc'd
==1130==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1130==    by 0x401312: make_deck_exclude (deck.c:99)
==1130==    by 0x401566: build_remaining_deck (deck.c:156)
==1130==    by 0x400AF3: main (main.c:103)
==1130== 
==1130== Invalid write of size 8
==1130==    at 0x401407: make_deck_exclude (deck.c:110)
==1130==    by 0x401566: build_remaining_deck (deck.c:156)
==1130==    by 0x400AF3: main (main.c:103)
==1130==  Address 0x5208200 is 0 bytes after a block of size 304 alloc'd
==1130==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1130==    by 0x401333: make_deck_exclude (deck.c:102)
==1130==    by 0x401566: build_remaining_deck (deck.c:156)
==1130==    by 0x400AF3: main (main.c:103)
==1130== 
==1130== Invalid read of size 8
==1130==    at 0x4010EA: shuffle (deck.c:35)
==1130==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1130==    by 0x400B27: main (main.c:110)
==1130==  Address 0x52090a8 is 0 bytes after a block of size 8 alloc'd
==1130==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1130==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1130==    by 0x401566: build_remaining_deck (deck.c:156)
==1130==    by 0x400AF3: main (main.c:103)
==1130== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 368, hi = 86019856.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==1130==    at 0x38083F48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x38084064: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x380841F1: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x38091A9C: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x3807D673: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x3807BF03: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x380800DA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x3807B49A: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x38059401: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1130==    by 0x802D59855: ???
==1130==    by 0x802CA9F2F: ???
==1130==    by 0x80200838F: ???
==1130==    by 0x4010E4: shuffle (deck.c:34)

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 1130)
==1130==    at 0x4010FF: shuffle (deck.c:36)
==1130==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1130==    by 0x400B27: main (main.c:110)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

Running a simulation with 80000 draws for 4 hands...
Valgrind reported errors:
==1135== Memcheck, a memory error detector
==1135== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1135== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1135== Command: ./poker inp3.txt 80000
==1135== Parent PID: 1134
==1135== 
==1135== Invalid write of size 8
==1135==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135==  Address 0x5208f50 is 0 bytes after a block of size 192 alloc'd
==1135==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1135==    by 0x401312: make_deck_exclude (deck.c:99)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135== 
==1135== Invalid write of size 8
==1135==    at 0x401407: make_deck_exclude (deck.c:110)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135==  Address 0x52090a0 is 0 bytes after a block of size 192 alloc'd
==1135==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1135==    by 0x401333: make_deck_exclude (deck.c:102)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135== 
==1135== Invalid read of size 8
==1135==    at 0x4010FF: shuffle (deck.c:36)
==1135==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1135==    by 0x400B27: main (main.c:110)
==1135==  Address 0x5209b18 is 24 bytes before a block of size 8 alloc'd
==1135==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1135==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135== 
==1135== Invalid write of size 8
==1135==    at 0x40110B: shuffle (deck.c:37)
==1135==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1135==    by 0x400B27: main (main.c:110)
==1135==  Address 0x5209b18 is 24 bytes before a block of size 8 alloc'd
==1135==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1135==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135== 
==1135== Invalid read of size 8
==1135==    at 0x4010EA: shuffle (deck.c:35)
==1135==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1135==    by 0x400B27: main (main.c:110)
==1135==  Address 0x5209ae8 is 0 bytes after a block of size 8 alloc'd
==1135==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1135==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135== 
==1135== Invalid write of size 8
==1135==    at 0x401102: shuffle (deck.c:36)
==1135==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1135==    by 0x400B27: main (main.c:110)
==1135==  Address 0x5209ae8 is 0 bytes after a block of size 8 alloc'd
==1135==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1135==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1135==    by 0x401566: build_remaining_deck (deck.c:156)
==1135==    by 0x400AF3: main (main.c:103)
==1135== 
==1135== Invalid read of size 4
==1135==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1135==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1135==    by 0x400B27: main (main.c:110)
==1135==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1135== 
==1135== 
==1135== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1135==  Access not within mapped region at address 0x0
==1135==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1135==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1135==    by 0x400B27: main (main.c:110)
==1135==  If you believe this happened as a result of a stack
==1135==  overflow in your program's main thread (unlikely but
==1135==  possible), you can try to increase the size of the
==1135==  main thread stack using the --main-stacksize= flag.
==1135==  The main thread stack size used in this run was 8388608.
==1135== 
==1135== HEAP SUMMARY:
==1135==     in use at exit: 2,184 bytes in 87 blocks
==1135==   total heap usage: 166 allocs, 79 frees, 12,288 bytes allocated
==1135== 
==1135== LEAK SUMMARY:
==1135==    definitely lost: 728 bytes in 18 blocks
==1135==    indirectly lost: 200 bytes in 25 blocks
==1135==      possibly lost: 0 bytes in 0 blocks
==1135==    still reachable: 1,256 bytes in 44 blocks
==1135==         suppressed: 0 bytes in 0 blocks
==1135== Rerun with --leak-check=full to see details of leaked memory
==1135== 
==1135== For counts of detected and suppressed errors, rerun with: -v
==1135== ERROR SUMMARY: 74 errors from 7 contexts (suppressed: 0 from 0)
Running a simulation with 30000 draws for 2 hands...
Valgrind reported errors:
==1140== Memcheck, a memory error detector
==1140== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1140== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1140== Command: ./poker inp.txt 30000
==1140== Parent PID: 1139
==1140== 
==1140== Invalid write of size 8
==1140==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1140==    by 0x401566: build_remaining_deck (deck.c:156)
==1140==    by 0x400AF3: main (main.c:103)
==1140==  Address 0x5207b00 is 0 bytes after a block of size 304 alloc'd
==1140==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1140==    by 0x401312: make_deck_exclude (deck.c:99)
==1140==    by 0x401566: build_remaining_deck (deck.c:156)
==1140==    by 0x400AF3: main (main.c:103)
==1140== 
==1140== Invalid write of size 8
==1140==    at 0x401407: make_deck_exclude (deck.c:110)
==1140==    by 0x401566: build_remaining_deck (deck.c:156)
==1140==    by 0x400AF3: main (main.c:103)
==1140==  Address 0x5207cc0 is 0 bytes after a block of size 304 alloc'd
==1140==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1140==    by 0x401333: make_deck_exclude (deck.c:102)
==1140==    by 0x401566: build_remaining_deck (deck.c:156)
==1140==    by 0x400AF3: main (main.c:103)
==1140== 
==1140== 
==1140== Process terminating with default action of signal 6 (SIGABRT): dumping core
==1140==    at 0x4E6F428: raise (raise.c:54)
==1140==    by 0x4E71029: abort (abort.c:89)
==1140==    by 0x4E67BD6: __assert_fail_base (assert.c:92)
==1140==    by 0x4E67C81: __assert_fail (assert.c:101)
==1140==    by 0x401F6C: copy_straight (eval.c:333)
==1140==    by 0x402208: find_straight (eval.c:373)
==1140==    by 0x4023A7: evaluate_hand (eval.c:389)
==1140==    by 0x402E62: compare_hands (eval.c:267)
==1140==    by 0x4037C4: Monte_Carlo_trials (main.c:45)
==1140==    by 0x400B27: main (main.c:110)
==1140== 
==1140== HEAP SUMMARY:
==1140==     in use at exit: 2,032 bytes in 74 blocks
==1140==   total heap usage: 180 allocs, 106 frees, 13,063 bytes allocated
==1140== 
==1140== LEAK SUMMARY:
==1140==    definitely lost: 472 bytes in 9 blocks
==1140==    indirectly lost: 0 bytes in 0 blocks
==1140==      possibly lost: 0 bytes in 0 blocks
==1140==    still reachable: 1,560 bytes in 65 blocks
==1140==         suppressed: 0 bytes in 0 blocks
==1140== Rerun with --leak-check=full to see details of leaked memory
==1140== 
==1140== For counts of detected and suppressed errors, rerun with: -v
==1140== ERROR SUMMARY: 14 errors from 2 contexts (suppressed: 0 from 0)
 - Next, few Seven Card Stud hands
Running a simulation with 30000 draws for 2 hands...
Valgrind reported errors:
==1145== Memcheck, a memory error detector
==1145== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1145== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1145== Command: ./poker inp.txt 30000
==1145== Parent PID: 1144
==1145== 
==1145== Invalid write of size 8
==1145==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1145==    by 0x401566: build_remaining_deck (deck.c:156)
==1145==    by 0x400AF3: main (main.c:103)
==1145==  Address 0x5208110 is 0 bytes after a block of size 304 alloc'd
==1145==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1145==    by 0x401312: make_deck_exclude (deck.c:99)
==1145==    by 0x401566: build_remaining_deck (deck.c:156)
==1145==    by 0x400AF3: main (main.c:103)
==1145== 
==1145== Invalid write of size 8
==1145==    at 0x401407: make_deck_exclude (deck.c:110)
==1145==    by 0x401566: build_remaining_deck (deck.c:156)
==1145==    by 0x400AF3: main (main.c:103)
==1145==  Address 0x52082d0 is 0 bytes after a block of size 304 alloc'd
==1145==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1145==    by 0x401333: make_deck_exclude (deck.c:102)
==1145==    by 0x401566: build_remaining_deck (deck.c:156)
==1145==    by 0x400AF3: main (main.c:103)
==1145== 
==1145== 
==1145== Process terminating with default action of signal 6 (SIGABRT): dumping core
==1145==    at 0x4E6F428: raise (raise.c:54)
==1145==    by 0x4E71029: abort (abort.c:89)
==1145==    by 0x4E67BD6: __assert_fail_base (assert.c:92)
==1145==    by 0x4E67C81: __assert_fail (assert.c:101)
==1145==    by 0x401F6C: copy_straight (eval.c:333)
==1145==    by 0x402208: find_straight (eval.c:373)
==1145==    by 0x4023A7: evaluate_hand (eval.c:389)
==1145==    by 0x402E62: compare_hands (eval.c:267)
==1145==    by 0x4037C4: Monte_Carlo_trials (main.c:45)
==1145==    by 0x400B27: main (main.c:110)
==1145== 
==1145== HEAP SUMMARY:
==1145==     in use at exit: 2,168 bytes in 81 blocks
==1145==   total heap usage: 4,909 allocs, 4,828 frees, 139,327 bytes allocated
==1145== 
==1145== LEAK SUMMARY:
==1145==    definitely lost: 480 bytes in 10 blocks
==1145==    indirectly lost: 0 bytes in 0 blocks
==1145==      possibly lost: 0 bytes in 0 blocks
==1145==    still reachable: 1,688 bytes in 71 blocks
==1145==         suppressed: 0 bytes in 0 blocks
==1145== Rerun with --leak-check=full to see details of leaked memory
==1145== 
==1145== For counts of detected and suppressed errors, rerun with: -v
==1145== ERROR SUMMARY: 16 errors from 2 contexts (suppressed: 0 from 0)
Running a simulation with 40000 draws for 3 hands...
Valgrind reported errors:
==1150== Memcheck, a memory error detector
==1150== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1150== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1150== Command: ./poker inp2.txt 40000
==1150== Parent PID: 1149
==1150== 
==1150== Invalid write of size 8
==1150==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1150==    by 0x401566: build_remaining_deck (deck.c:156)
==1150==    by 0x400AF3: main (main.c:103)
==1150==  Address 0x5208b58 is 0 bytes after a block of size 248 alloc'd
==1150==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1150==    by 0x401312: make_deck_exclude (deck.c:99)
==1150==    by 0x401566: build_remaining_deck (deck.c:156)
==1150==    by 0x400AF3: main (main.c:103)
==1150== 
==1150== Invalid write of size 8
==1150==    at 0x401407: make_deck_exclude (deck.c:110)
==1150==    by 0x401566: build_remaining_deck (deck.c:156)
==1150==    by 0x400AF3: main (main.c:103)
==1150==  Address 0x5208ce8 is 0 bytes after a block of size 248 alloc'd
==1150==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1150==    by 0x401333: make_deck_exclude (deck.c:102)
==1150==    by 0x401566: build_remaining_deck (deck.c:156)
==1150==    by 0x400AF3: main (main.c:103)
==1150== 
==1150== 
==1150== HEAP SUMMARY:
==1150==     in use at exit: 488 bytes in 11 blocks
==1150==   total heap usage: 279,686 allocs, 279,675 frees, 7,999,362 bytes allocated
==1150== 
==1150== LEAK SUMMARY:
==1150==    definitely lost: 488 bytes in 11 blocks
==1150==    indirectly lost: 0 bytes in 0 blocks
==1150==      possibly lost: 0 bytes in 0 blocks
==1150==    still reachable: 0 bytes in 0 blocks
==1150==         suppressed: 0 bytes in 0 blocks
==1150== Rerun with --leak-check=full to see details of leaked memory
==1150== 
==1150== For counts of detected and suppressed errors, rerun with: -v
==1150== ERROR SUMMARY: 18 errors from 2 contexts (suppressed: 0 from 0)
 - Then one from a completely made up poker variant
Running a simulation with 100000 draws for 6 hands...
Valgrind reported errors:
==1155== Memcheck, a memory error detector
==1155== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1155== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1155== Command: ./poker whacky.txt 100000
==1155== Parent PID: 1154
==1155== 
==1155== Invalid write of size 8
==1155==    at 0x4013EC: make_deck_exclude (deck.c:108)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155==  Address 0x520a980 is 0 bytes after a block of size 80 alloc'd
==1155==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1155==    by 0x401312: make_deck_exclude (deck.c:99)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155== 
==1155== Invalid write of size 8
==1155==    at 0x401407: make_deck_exclude (deck.c:110)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155==  Address 0x520aa60 is 0 bytes after a block of size 80 alloc'd
==1155==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1155==    by 0x401333: make_deck_exclude (deck.c:102)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155== 
==1155== Invalid read of size 8
==1155==    at 0x4010FF: shuffle (deck.c:36)
==1155==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1155==    by 0x400B27: main (main.c:110)
==1155==  Address 0x520b058 is 16 bytes after a block of size 8 alloc'd
==1155==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1155==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155== 
==1155== Invalid write of size 8
==1155==    at 0x40110B: shuffle (deck.c:37)
==1155==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1155==    by 0x400B27: main (main.c:110)
==1155==  Address 0x520b058 is 16 bytes after a block of size 8 alloc'd
==1155==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1155==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155== 
==1155== Invalid read of size 8
==1155==    at 0x4010EA: shuffle (deck.c:35)
==1155==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1155==    by 0x400B27: main (main.c:110)
==1155==  Address 0x520b048 is 0 bytes after a block of size 8 alloc'd
==1155==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1155==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155== 
==1155== Invalid write of size 8
==1155==    at 0x401102: shuffle (deck.c:36)
==1155==    by 0x40374A: Monte_Carlo_trials (main.c:40)
==1155==    by 0x400B27: main (main.c:110)
==1155==  Address 0x520b048 is 0 bytes after a block of size 8 alloc'd
==1155==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1155==    by 0x4013D8: make_deck_exclude (deck.c:108)
==1155==    by 0x401566: build_remaining_deck (deck.c:156)
==1155==    by 0x400AF3: main (main.c:103)
==1155== 
==1155== Invalid read of size 4
==1155==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1155==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1155==    by 0x400B27: main (main.c:110)
==1155==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1155== 
==1155== 
==1155== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1155==  Access not within mapped region at address 0x0
==1155==    at 0x4030FC: future_cards_from_deck (future.c:51)
==1155==    by 0x403757: Monte_Carlo_trials (main.c:41)
==1155==    by 0x400B27: main (main.c:110)
==1155==  If you believe this happened as a result of a stack
==1155==  overflow in your program's main thread (unlikely but
==1155==  possible), you can try to increase the size of the
==1155==  main thread stack using the --main-stacksize= flag.
==1155==  The main thread stack size used in this run was 8388608.
==1155== 
==1155== HEAP SUMMARY:
==1155==     in use at exit: 2,432 bytes in 100 blocks
==1155==   total heap usage: 229 allocs, 129 frees, 13,700 bytes allocated
==1155== 
==1155== LEAK SUMMARY:
==1155==    definitely lost: 632 bytes in 20 blocks
==1155==    indirectly lost: 112 bytes in 14 blocks
==1155==      possibly lost: 0 bytes in 0 blocks
==1155==    still reachable: 1,688 bytes in 66 blocks
==1155==         suppressed: 0 bytes in 0 blocks
==1155== Rerun with --leak-check=full to see details of leaked memory
==1155== 
==1155== For counts of detected and suppressed errors, rerun with: -v
==1155== ERROR SUMMARY: 55 errors from 7 contexts (suppressed: 0 from 0)

Overall Grade: F
